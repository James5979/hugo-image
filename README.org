#+title: Hugo container image
#+property: header-args :eval never-export :results output silent
#+startup: content

A Hugo =Dockerfile= to build OCI compliant container images.

** Build

Use Buildah (or docker) to build the Hugo image from the same directory as the Dockerfile.

*Buildah*

#+begin_src shell
buildah build --tag hugo:<version> .
#+end_src

*docker*

#+begin_src shell
docker build --tag hugo:<version> .
#+end_src

** Example usage

Using the pre-built container image included within this repository, deploy the Hugo image to a Kubernetes cluster as a Pod:

#+begin_src yaml :eval query
kind: Pod
apiVersion: v1
metadata:
  name: hugo
  namespace: default
  labels:
    app: hugo
spec:
  imagePullSecrets:
  - name: regcred
  securityContext:
    seccompProfile:
      type: RuntimeDefault
    fsGroup: 101
    fsGroupChangePolicy: "OnRootMismatch"
  initContainers:
  - name: git-sync
    image: registry.k8s.io/git-sync/git-sync:v3.6.6
    imagePullPolicy: IfNotPresent
    env:
    - name: GIT_SYNC_BRANCH
      value: "main"
    - name: GIT_SYNC_DEPTH
      value: "1"
    - name: GIT_SYNC_ONE_TIME
      value: "true"
    - name: GIT_SYNC_PERMISSIONS
      value: "0750"
    - name: GIT_SYNC_REPO
      value: "https://github.com/James5979/literate-devops-site/"
    - name: GIT_SYNC_ROOT
      value: "/usr/local/src"
    securityContext:
      runAsUser: 65533
      runAsGroup: 101
      allowPrivilegeEscalation: false
    volumeMounts:
    - name: markup
      mountPath: /usr/local/src
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
        ephemeral-storage: "2Gi"
      limits:
        cpu: "200m"
        memory: "256Mi"
        ephemeral-storage: "4Gi"
  containers:
  - name: hugo
    image: ghcr.io/james5979/hugo:0.115.4
    imagePullPolicy: IfNotPresent
    ports:
    - name: http
      containerPort: 1313
    args:
    - "server"
    - "--bind=0.0.0.0"
    - "--config=/usr/local/src/literate-devops-site/config.yaml"
    - "--contentDir=/usr/local/src/literate-devops-site/content"
    - "--environment=production"
    - "--layoutDir=/usr/local/src/literate-devops-site/layouts"
    - "--port=1313"
    - "--themesDir=/usr/local/src/literate-devops-site/themes"
    securityContext:
      runAsUser: 101
      runAsGroup: 101
      allowPrivilegeEscalation: false
    volumeMounts:
    - name: markup
      mountPath: /usr/local/src
      readOnly: true
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
        ephemeral-storage: "2Gi"
      limits:
        cpu: "200m"
        memory: "256Mi"
        ephemeral-storage: "4Gi"
  volumes:
  - name: markup
    emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: hugo-test
  labels:
    app: hugo
spec:
  selector:
    app: hugo
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 1313
  type: ClusterIP
#+end_src

*WARNING*: it is [[https://gohugo.io/commands/hugo_server/#synopsis][recommended]] that you use a dedicated webserver in production (such as NGINX), since the Hugo webserver is primarily used as a development server, and is therefore less featureful.
